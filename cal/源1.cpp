#include<stdio.h>

int main()
{   //                          b[0],h[20],E[20],M需要修改
	//b――截面宽                                  y――截面形心位置（以第一个截面上面为坐标原点）
	//h――截面高                                  Yc――整个等效截面图的形心
	//E――截面弹性模量                            Sq――形心坐标与面积的积的和
	//S――截面面积                                S1――总面积
	//I――截面抗弯截面系数
	//输入变量
	double b[20] = { 10 }, h[20] = { 10,20,10 }, E[20] = { 10,30,10 },M=15;
	//中间变量
	double S[20] = { 0 }, y[20] = { 0 }, Sq = 0, S1 = 0;
	//输出变量
	double I[20], Ic = 0, Yc = 0, P[20] = { 0 }, Q[20] = {0};
	//计算等效截面宽
	for (int i = 0; i < 20; i++)
		b[i] = b[0] * E[i] / E[0];
	//计算每个截面的形心位置
	y[0] = 0.5*h[0];
	for (int j=1; j < 20; j++)
		y[j] = 0.5*h[j] + y[j - 1]+0.5*h[j-1];
	//计算每个截面的面积
	for (int k = 0; k < 20; k++)
	{
		S[k] = b[k] * h[k];
		Sq = Sq + S[k];
		S1 = S1 + S[k] * y[k];
	}
	//计算中性面y坐标
	Yc = S1 / Sq;
	//计算每个截面的抗弯界面系数
	for (int i = 0; i < 20; i++)
	{
		I[i] = b[i] * h[i] * h[i] * h[i] / 12 + S[i] * (y[i] - Yc)*(y[i] - Yc);
		Ic = Ic + I[i];
	}
	//正应力计算
	for (int i = 0; i < 20; i++)
	{
		P[i] =E[i]/E[0]* M*(y[i] - 0.5*h[i] - Yc) / Ic;
		Q[i] = E[i] / E[0]* M*(y[i] + 0.5*h[i] - Yc) / Ic;
	}
		
	//输出正应力值
	for (int i = 0; i < 20; i++)
		if (h[i]!=0)
	printf("第%d层上表面正应力值为:%f             第%d层上表面正应力值为:%f",i,P[i],i,Q[i]);







		 
	return 0;
}